"use strict";
var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }
    return _typeof(obj);
  }
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = Admin;
  var _react = _interopRequireWildcard(require("react"));
  var _socket = require("socket.io-client");
  var _CreateSequenceForm = _interopRequireDefault(require("./CreateSequenceForm"));
  var _Sequence = _interopRequireDefault(require("./Sequence"));
  var _jsxRuntime = require("react/jsx-runtime");
  var _s2 = $RefreshSig$();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
  }
  function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || (/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/).test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  function _iterableToArrayLimit(arr, i) {
    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
  var ENDPOINT = 'localhost:4242';
  var socket;
  function Admin() {
    _s2();
    var _useState = (0, _react.useState)('Connection Pending...'), _useState2 = _slicedToArray(_useState, 2), connectionStatus = _useState2[0], setConnectionStatus = _useState2[1];
    var _useState3 = (0, _react.useState)(), _useState4 = _slicedToArray(_useState3, 2), currentSequence = _useState4[0], setCurrentSequence = _useState4[1];
    var _useState5 = (0, _react.useState)(0), _useState6 = _slicedToArray(_useState5, 2), currentStepNumber = _useState6[0], setCurrentStepNumber = _useState6[1];
    var _useState7 = (0, _react.useState)(false), _useState8 = _slicedToArray(_useState7, 2), sequenceWasRendered = _useState8[0], setSequenceWasRendered = _useState8[1];
    (0, _react.useEffect)(function () {
      socket = (0, _socket.io)(ENDPOINT);
      socket.on('success', function (response) {
        setConnectionStatus(response);
      });
      socket.on('sequence', function (sequence) {
        // console.log('sequence received by Admin: ', sequence)
        // setCurrentSequence(sequence)
        setSequenceWasRendered(true);
      });
    }, []);
    return (
      /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("h2", {
          children: ["Status: ", connectionStatus]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_CreateSequenceForm["default"], {
          socket: socket,
          sequenceWasRendered: sequenceWasRendered,
          setSequenceWasRendered: setSequenceWasRendered
        }), sequenceWasRendered ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Sequence["default"], {
          socket: socket
        }) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {})]
      })
    );
  }
  _s2(Admin, "x5xlh6hrQdph8zE087FnI9X0P9c=");
  _c = Admin;
  var _c;
  $RefreshReg$(_c, "Admin");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
